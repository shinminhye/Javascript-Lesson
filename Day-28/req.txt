*          -1,-1
**
***

***        -1, 1
**
*

1, -1



i, j => 0 until 3

{ i: 0, j: 0 }
{ i: 0, j: 1 }
{ i: 0, j: 2 }
{ i: 1, j: 0 }
{ i: 1, j: 1 }
{ i: 1, j: 2 }
{ i: 2, j: 0 }
{ i: 2, j: 1 }
{ i: 2, j: 2 }

step 0
data (i, j)
(0, 0), (1, 0), (1, 1)
(2, 0), (2, 1), (2, 2)

x(down)  = i-1
y(right) = j-1

data (x, y)
(0,0),  (-1, -1), (1, 1)
(0, -1),(1, 0),
(1, -1) 

step 1

*
**
***

step 2

(x, y) * (1, -1) => (x', y')

i = x' + 1
j = y' + 1

***
**
*
